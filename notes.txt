** Thoughts on research.

 * So right of based on what we talked about previously, it seems as though there are three directions that
   we can take in terms of analyzing our data for parse trees
   - First off we consider comparing the smaller of the two trees against the longest common substring
   - Second, we compare the larger of the two trees against the longest common substring
   - Thirdly, we consider the average of the two trees compared against the longest common substring
 * We also need to consider exactly what we want our final analysis to look like: Do we want to keep all of our
   data in sub-formats as we process it? For now I am going to create a second data directory to write stats
   to for each file. 
 * In terms of starting out 

** For paper -> Keep information in their own locations.

minife-128-mutrino-liballprof/

%% Collect data on number of commits and absolute age of code base, (Time of commit) date of commit and relative
%% age; time which has elapsed from first commit to most recent version. Absolute age. date and number of 
commits. Can compute correlation and statistics. Use data already collected

%% PSAAP
How to get communication data -> how many bytes we've communicated at what rate -> TAU, LD-PRELOAD library, 
traces

** Communcation intensity -> How many bytes are we able to move/amount of communcation done.

LASSEN

module load tau

pprof

*** Parse Trees ***

Instead of counting number of files which are the same, it is instead a weighted sum
if identical 1 in numerator -> put a number between zero and one in the numerator

How much much more information do we get when we use the parse tree method -> how much more is shared?

* Two coins which aren't the same.

** Put together a DOI for our dataset

Reach out to John Wheeler -> We want to preserve this repository/data. Ask about DOI at the libraries
paper -> How did we pick tags for tagged repositories? Go into detail under dataset section: Which tags did
we want, this is what we ended up with. -> Go into more detail about the dataset.

** How do we define established?? Important!

Liballprof:

rank 0:
  * MPI_Init: 140728852294056, 140728852294032, 3777967953956

rank 1:
  * MPI_Init: 140734511923112, 140734511923088, 3777967953927
